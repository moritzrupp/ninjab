if [ ${load_part_aliases} ]; then
    [ ${startup_debug} ] && echo " loading" ||:
else
    [ ${startup_debug} ] && echo " skipping" ||:
    return
fi

int_ninjab_available_parts="$int_ninjab_available_parts 3_aliases"

#---------------------------------------------------------------------
# Aliases
#
# Be carefull with overwriting commands in eg OSX. It doesnt
# take care of eg options that is repeated.
# Alias for 'tail -n 30' works fine in Linux when adding another
# -n, so it is 'tail -n 30 -n 1', but not in OSX (and proably others)
#---------------------------------------------------------------------

# ch... Turn on a little verbosety
case ${OS} in
     Darwin)
	if [ ! -z ${load_part_aliases_same} ]; then
	    [ ${startup_debug} ] && echo "Turn on verbosity for chmod/chown (adding -vv)" ||:
            alias chmod='chmod -vv'
            alias chown='chown -vv'

            # head and tail smart height isnt handled very well in osx since it wont
            # overwrite -n if its already defined. tail -n 30 -n 10 will fail.
	fi
        ;;

     Linux)
	if [ ! -z ${load_part_aliases_same} ]; then
	    [ ${startup_debug} ] && echo "Turn on verbosity for chmod/chown (adding -c)" ||:
            alias chmod='chmod -c'
            alias chown='chown -c'

            # Makes them fill the screen by default
	    [ ${startup_debug} ] && echo "Making head/tail fill the screen height as default" ||:
            alias head='head -n $(($LINES-2))'
            alias tail='tail -n $(($LINES-2))'
	fi
        ;;
esac

# Prevents accidentally clobbering files, and be verbose.
if [ ! -z ${load_part_aliases_same} ]; then
    [ ${startup_debug} ] && echo "Prevent accidentally clobbering files rm/cp/mv (adding -v -i)" ||:
    alias rm='rm -v -i'
    alias cp='cp -v -i'
    alias mv='mv -v -i'
fi

# lazy cd ..
if [ ! -z ${load_part_aliases_ls_shortcuts} ]; then
    [ ${startup_debug} ] && echo ". aliases, for ..=cd .., ...=cd ../.. and so on" ||:
    alias ..='cd ..'
    alias ...='cd ../..'
    alias ....='cd ../../..'
    alias .....='cd ../../../..'
    alias ......='cd ../../../../..'
fi

alias ss='sudo bash -l'
alias psa='ps aux'
alias cpr='cp -prv' # Keep rights, recursive, verbose
[ ! -z ${load_part_aliases_same} ] && alias mkdir='mkdir -p'
[ ! -z ${load_part_aliases_same} ] && alias which='type -a'
alias path='echo -e ${PATH//:/\\n}'
alias cd-source='cd `pwd -P`' # Goto the "real" path of the directory you are in, follow symlinks

# One letters
if [ ! -z ${load_part_aliases_oneletters} ]; then
    [ ${startup_debug} ] && echo "One letter aliases, c=clear, l=ll, p=ps aux, n=nano" ||:
    #alias j='jobs -l' # Collides with autojoin package. And is not really that usefull
    alias c='clear' # Quick clear
    alias l='ll'
    alias p='psa'
    alias n='nano'
fi

alias exit-silent='disown -a && exit'
alias proc-pause='killall -STOP '
alias proc-unpause='killall -CONT '

if [ ! -z ${load_part_aliases_ls} ]; then
    case ${os} in
	Darwin)
	    [ ${startup_debug} ] && echo "ll will also display osx attributes" ||:
	    [ ! -z ${load_part_aliases_same} ] && alias ls='ls -hF'
	    alias ll='ls -lOe' # View osx attributes and fs attributes too
	    ;;
	Linux)
	    [ ${startup_debug} ] && echo "Add colors for filetypes, ll groups directories first, lx sorts by extension" ||:
	    [ ! -z ${load_part_aliases_same} ] && alias ls='ls -hF --color'  # add colors for filetype recognition
	    alias ll='ls -l'
	    alias lx='ls -lXB'         # sort by extension
	    ;;
    esac

    [ ${startup_debug} ] && echo "ls aliases, la, lk, lc, lu, lt, lm, lr" ||:
    alias la='ls -Al'          # show hidden files
    alias lk='ls -lSr'         # sort by size, biggest last
    alias lc='ls -ltcr'        # sort by and show change time, most recent last
    alias lu='ls -ltur'        # sort by and show access time, most recent last
    alias lt='ls -ltr'         # sort by date, most recent last
    alias lm='ls -Al | less'   # pipe through 'less' (more)
    alias lr='ls -lR'          # recursive ls

    if which tree &> /dev/null; then
	[ ! -z ${load_part_aliases_same} ] && alias tree='tree -Csu'     # nice alternative to 'recursive ls'
    fi
fi

# Select processes that are using the most CPU and show just show the top 10
#alias psc='ps haux | sort -k 3nr | head | awk "BEGIN {printf \"${COLOR_CYAN}%CPU${COLOR_DEFAULT}\t%MEM\tPID\t%USER\tCOMMAND\n\"} {printf \"${COLOR_CYAN}%s${COLOR_DEFAULT}\t%s\t%s\t%s\t%s\n\", \$3, \$4, \$2, \$1, \$11}"'

# Select processes that are using the most memory and just show the top 10
#alias psm='ps haux | sort -k 4nr | head | awk "BEGIN {printf \"%CPU\t${COLOR_CYAN}%MEM${COLOR_DEFAULT}\tPID\t%USER\tCOMMAND\n\"} {printf \"%s\t${COLOR_CYAN}%s${COLOR_DEFAULT}\t%s\t%s\t%s\n\", \$3, \$4, \$2, \$1, \$11}"'

alias psc='ps haux | sort -k 3nr | head | awk "BEGIN {printf \"${COLOR_CYAN}CPU${COLOR_DEFAULT}\tMEM\tPID\tUSER\tCOMMAND\n\"} {printf \"${COLOR_CYAN}%s${COLOR_DEFAULT}\t%s\t%s\t%s\t%s\n\", \$3, \$4, \$2, \$1, \$11}"'
alias psm='ps haux | sort -k 4nr | head | awk "BEGIN {printf \"%CPU\t${COLOR_CYAN}%MEM${COLOR_DEFAULT}\tPID\t%USER\tCOMMAND\n\"} {printf \"%s\t${COLOR_CYAN}%s${COLOR_DEFAULT}\t%s\t%s\t%s\n\", \$3, \$4, \$2, \$1, \$11}"'